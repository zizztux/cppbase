#
# Copyright (c) 2017-2018, SeungRyeol Lee
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# * Neither the name of the copyright holder nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

PROJECT := @PACKAGE_TARNAME@
VERSION := @PACKAGE_VERSION@
MAJOR := $(word 1,$(subst ., ,$(VERSION)))
MINOR := $(word 2,$(subst ., ,$(VERSION)))
PATCH := $(word 3,$(subst ., ,$(VERSION)))

#
# Toolchain
#
export AR := @AR@
export CC := @CC@
export CPP := @CPP@
export CXX := @CXX@
export LD := @LD@
export NM := @NM@
export STRIP := @STRIP@
export OBJCOPY := @OBJCOPY@
export OBJDUMP := @OBJDUMP@

MKINSTALLDIRS := scripts/mkinstalldirs
INSTALL := scripts/install-sh

#
# Directories and files
#
TOP_DIR := ../..
SRC_DIR := $(TOP_DIR)/src
OUTPUT_DIR := ./obj
INSTALL_DIR := @prefix@

OUTPUT := $(OUTPUT_DIR)/$(PROJECT)
#OUTPUT := $(OUTPUT_DIR)/$(PROJECT).so.$(VERSION)
SRCS += $(addprefix $(SRC_DIR)/app/,cppmain.cpp)
SRCS += $(addprefix $(SRC_DIR)/arch/x64/,x64.S)
SRCS += $(addprefix $(SRC_DIR)/platform/generic/,generic.c)
OBJS += $(patsubst $(SRC_DIR)/%.c,$(OUTPUT_DIR)/%.o,$(filter %.c,$(SRCS)))
OBJS += $(patsubst $(SRC_DIR)/%.cc,$(OUTPUT_DIR)/%.o,$(filter %.cc,$(SRCS)))
OBJS += $(patsubst $(SRC_DIR)/%.cpp,$(OUTPUT_DIR)/%.o,$(filter %.cpp,$(SRCS)))
OBJS += $(patsubst $(SRC_DIR)/%.S,$(OUTPUT_DIR)/%.o,$(filter %.S,$(SRCS)))

#
# Build options
#
CPPFLAGS := -I$(shell pwd)/$(TOP_DIR)/include -DVERSION=\"$(VERSION)\"
CFLAGS := -Wall -O2 @CFLAGS_FOR_HOST@
CXXFLAGS := -std=c++1z -Wall -O2 @CXXFLAGS_FOR_HOST@
LDFLAGS := -lstdc++fs @LDFLAGS_FOR_HOST@
ifeq ($(DEBUG),1)
CPPFLAGS +=
CFLAGS += -g
CXXFLAGS += -g
LDFLAGS += -g
endif

#
# Build targets
#
all: $(OUTPUT)

$(OUTPUT): $(OBJS)
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -o $@ $^ $(LDFLAGS)
#	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -shared -Wl,-soname,$(patsubst %.$(MINOR).$(PATCH),%,$(notdir $@)) -o $@ $^ $(LDFLAGS)
	$(OBJDUMP) -drSgx $@ > $@.dis
	$(NM) -lS $@ > $@.sym

include $(TOP_DIR)/build/linux/rules.mk

install: $(OUTPUT)
	$(MKINSTALLDIRS) $(INSTALL_DIR)
	$(INSTALL) $^ $(INSTALL_DIR)

ctags:
	ctags `find $(TOP_DIR)/ \( -name '*.[chsS]' -o -name '*.cc' -o -name '*.cpp' \) -print`

cscope:
	find $(TOP_DIR)/ \( -name '*.[chsS]' -o -name '*.cc' -o -name '*.cpp' \) -print > cscope.files
	cscope -b -q -k

clean:
	\rm -rf $(OUTPUT_DIR)

distclean: clean
	\rm -f Makefile
	\rm -rf config.h config.status config.log autom4te.cache
	\rm -f tags cscope*

.PHONY: all install ctags cscope clean distclean
