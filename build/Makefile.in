#
# Copyright (c) 2017-2020, SeungRyeol Lee
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# * Neither the name of the copyright holder nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

PROJECT := @PACKAGE_TARNAME@
VERSION := @PACKAGE_VERSION@
MAJOR := $(word 1,$(subst ., ,$(VERSION)))
MINOR := $(word 2,$(subst ., ,$(VERSION)))
PATCH := $(word 3,$(subst ., ,$(VERSION)))
DEBUG ?= 0

VERSION_STR := $(VERSION)-$(shell git rev-parse --short HEAD 2> /dev/null || echo "release")
BUILD_STR := $(shell whoami)@$(shell hostname -f)

#
# Toolchain
#
CROSS_COMPILE ?=
export CC := $(CROSS_COMPILE)@CC@
export CPP := $(CROSS_COMPILE)@CPP@
export CXX := $(CROSS_COMPILE)@CXX@
export INSTALL := @INSTALL@ -p
export LDCONFIG := @LDCONFIG@
export LN_S := @LN_S@
export MKDIR_P := @MKDIR_P@
export RANLIB := $(CROSS_COMPILE)@RANLIB@

#
# Directories and files
#
TOP_DIR := ..
HDR_DIR := $(TOP_DIR)/include
SRC_DIR := $(TOP_DIR)/src
TEST_DIR := $(TOP_DIR)/test
OUTPUT_DIR := ./obj
INSTALL_DIR := @prefix@

OUTPUT := $(OUTPUT_DIR)/$(PROJECT).so.$(VERSION)
HDRS += $(wildcard $(HDR_DIR)/*.hpp)
SRCS += $(wildcard $(SRC_DIR)/*.c $(SRC_DIR)/*.cc $(SRC_DIR)/*.cpp)
OBJS += $(patsubst $(SRC_DIR)/%.c,$(OUTPUT_DIR)/%.o,$(filter %.c,$(SRCS)))
OBJS += $(patsubst $(SRC_DIR)/%.cc,$(OUTPUT_DIR)/%.o,$(filter %.cc,$(SRCS)))
OBJS += $(patsubst $(SRC_DIR)/%.cpp,$(OUTPUT_DIR)/%.o,$(filter %.cpp,$(SRCS)))

#
# Build options
#
CPPFLAGS := -I$(shell pwd)/$(HDR_DIR) -DVERSION=\"$(VERSION_STR)\" -DBUILD=\"$(BUILD_STR)\" @CPPFLAGS@
CXXFLAGS := -std=c++1z -fPIC -Wall -O2 @CXXFLAGS@
LDFLAGS := -lpthread -lstdc++fs @LDFLAGS@
ifneq ($(DEBUG),0)
CPPFLAGS +=
CXXFLAGS += -g
else
CPPFLAGS += -DNDEBUG
CXXFLAGS +=
endif

#
# Build targets
#
all: $(OUTPUT)

$(OUTPUT): $(OBJS)
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -shared -Wl,-soname,$(patsubst %.$(MINOR).$(PATCH),%,$(notdir $@)) -o $@ $^ $(LDFLAGS)
	$(LDCONFIG) -n $(dir $(OUTPUT)) &> /dev/null
	$(LN_S) -f $(patsubst %.$(MINOR).$(PATCH),%,$(notdir $@)) $(patsubst %.$(MAJOR).$(MINOR).$(PATCH),%,$@)

ifeq (,$(filter $(MAKECMDGOALS),clean distclean))
include $(TOP_DIR)/build/rules.mk
endif

install: install-lib install-hdr

install-hdr: $(HDRS)
	$(INSTALL) -D -m 0644 -t $(INSTALL_DIR)/include $^

install-lib: $(OUTPUT)
	$(INSTALL) -D -m 0644 -s --strip-program=$(CROSS_COMPILE)strip -t $(INSTALL_DIR)/lib $^
	$(LDCONFIG) -n $(INSTALL_DIR)/lib &> /dev/null
	$(LN_S) -f $(patsubst %.$(MINOR).$(PATCH),%,$(notdir $<)) $(patsubst %.$(MAJOR).$(MINOR).$(PATCH),$(INSTALL_DIR)/lib/%,$(notdir $<))

test: $(OUTPUT)
	@$(MAKE) -C $(TEST_DIR)

ctags:
	ctags `find $(TOP_DIR)/ \( -name '*.[chsS]' -o -name '*.hpp' -o -name '*.cc' -o -name '*.cpp' \) -print`

cscope:
	find $(TOP_DIR)/ \( -name '*.[chsS]' -o -name '*.hpp' -o -name '*.cc' -o -name '*.cpp' \) -print > cscope.files
	cscope -b -q -k

clean:
	\rm -rf $(OUTPUT_DIR) ./out
	@$(MAKE) -C $(TEST_DIR) clean

distclean: clean
	\rm -f Makefile
	\rm -rf config.h config.h.in~ config.status config.log autom4te.cache
	\rm -f tags cscope*

.PHONY: all install install-hdr install-lib test ctags cscope clean distclean
